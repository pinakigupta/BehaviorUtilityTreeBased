/** THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MODIFY
 * BY HAND!!
 *
 * Generated by lcm-gen
 **/

//#include <lcm/lcm_coretypes.h>

#ifndef __exlcm_lanesegment_t_hpp__
#define __exlcm_lanesegment_t_hpp__

#include <vector>
#include "lanewidth_t.hpp"
#include "waypoint_t.hpp"
#include "connection_t.hpp"

namespace exlcm
{

class lanesegment_t
{
    public:
        int8_t     valid_f;

        int8_t     version_n;

        int16_t    rolling_count;

        double     timestamp_sec;

        int64_t    ref_n;

        int32_t    maplet_iteration_n;

        int64_t    uid;

        int8_t     lane_index;

        int8_t     road_type;

        float      length_m;

        int8_t     lane_width_count;

        std::vector< exlcm::lanewidth_t > lane_width;

        float      posted_speed_lim_mps;

        float      average_driven_speed_mps;

        int8_t     lane_flow_restriction_count;

        int8_t     cross_traffic_type;

        float      creep_dist_after_stop_m;

        int8_t     nominal_path_waypoint_count;

        std::vector< exlcm::waypoint_t > nominal_path_waypoint;

        int8_t     right_edge_set_count;

        int8_t     primary_prev_connection_n;

        int8_t     primary_next_connection_n;

        int8_t     left_parallel_connection_n;

        int8_t     right_parallel_connection_n;

        int64_t    intersection_uid;

        int8_t     connection_count;

        std::vector< exlcm::connection_t > connection;

};
}

#endif
