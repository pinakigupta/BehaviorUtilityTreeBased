#pragma once
#include "../PCH/pch.hpp"

#include "shared_enums.h"


namespace BehaviorTertiary
{
typedef enum TurnIndicator{ TURN_INDICATOR_UNKNOWN, TURN_INDICATOR_LEFT, TURN_INDICATOR_RIGHT, TURN_INDICATOR_EMERGENCY_FLASH, TURN_INDICATOR_NONE};
typedef enum SpatialTaskType { LANE_SHUTDOWN, LANE_PROPAGATE, LANE_SHIFT, LANE_REVERSE_PROPAGATE, LANE_REVERSE_SHIFT};
}

typedef enum BehaviorPreferenceOrder{
	UNKNOWN_BEHAVIOR_ORDER,
	LANE_KEEPING_BEHAVIOR_ORDER,
	TURN_RIGHT_BEHAVIOR_ORDER,
	TURN_LEFT_BEHAVIOR_ORDER,
	TURN_ALONG_CURVY_ROAD_BEHAVIOR_ORDER,
	ENTERING_ROUNDABOUT_BEHAVIOR_ORDER,
	EXITING_ROUNDABOUT_BEHAVIOR_ORDER,
	MERGING_BEHAVIOR_ORDER,
	EXITING_FLOW_BEHAVIOR_ORDER,
	ACC_BEHAVIOR_ORDER,
	LANE_CHANGE_BEHAVIOR_ORDER,
	STOP_AT_STOP_BAR_BEHAVIOR_ORDER,
	STOP_AT_TRAFFIC_LIGHT_BEHAVIOR_ORDER,
	YIELD_TO_CROSS_TRAFFIC_BEHAVIOR_ORDER,
	YIELD_TO_PEDESTRIAN_BEHAVIOR_ORDER,
	HANDLE_INTERSECTION_BEHAVIOR_ORDER,
	EVASIVE_LANE_CHANGE_BEHAVIOR_ORDER,
	SAFETY_FIRST_BEHAVIOR_ORDER,
	COLLISION_IMMINENT_BEHAVIOR_ORDER
};

typedef enum TempRules{
	RIGHT_OF_WAY				= ASSUME_RIGHT_OF_WAY_RULE,	/*Only yield for collision avoidance*/
	YIELD 					= YIELD_FOR_PEDESTRIAN_RULE, //used as pedestrian crossing for now	/*Yield to cross-traffic and conflicting oncoming traffic*/
	STOP 		= STOP_AND_YIELD_UNTIL_CLEAR_RULE,	/*Yield to cross-traffic and conflicting oncoming traffic, after making stop*/
	MULTIWAY_STOP 				= HANDLE_MULTIWAY_STOP_RULE,	/*Stop and proceed after earlier arriving vehicles, following multiway-stop etiquette*/
	RIGHT_OF_WAY_AFTER_SIGNAL	= ASSUME_RIGHT_OF_WAY_AFTER_SIGNAL_RULE,	/*Stop if signal is or soon red; after green, only yield for collision avoidance*/
	YIELD_UNTIL_CLEAR_AFTER_SIGNAL		= YIELD_UNTIL_CLEAR_AFTER_SIGNAL_RULE,	/*Stop if signal is or soon red; after green, yield to conflicting traffic*/
	RIGHT_ON_RED			 			= RIGHT_ON_RED_RULE,	/*Yield to cross-traffic and conflicting oncoming traffic after making stop at red light; on green, assume right-of-way*/
	MERGE		 	= MERGE_AT_TRAFFIC_SPEED_RULE,		/*Merge into exisiting traffic flow, matching speed if slower than intended*/
	EXIT           = EXIT_AT_TRAFFIC_SPEED_RULE,
	CHANGE_LANES = CHANGE_LANES_RULE,
	OBSERVED_TRAFFIC_SIGN = OBEY_POSTED_SIGN_RULE,
	OBSERVED_MAYBE_TRAFFIC_SIGN = OBEY_SIGN_IF_POSTED_RULE,
	YIELD_ZONE = YIELD_UNTIL_CREEP_DISTANCE_REACHED,
	INTERSECTION = FOLLOW_INTERSECTION_RULE,
	RIGHT_OF_WAY_AFTER_RAIL_CROSSING_CLEAR = ASSUME_RIGHT_OF_WAY_AFTER_RAIL_CROSSING_CLEAR_RULE,
	NO_STOP_ZONE = 42,
	SLOWDOWN_ZONE = 43,
	RIGHT_OF_WAY_AFTER_SIGNAL_STOP_ZONE = 44 ,
	YIELD_TO_OBJ = 45,
	ACC = 47,
	LEFT_TURN = 48,
	RIGHT_TURN = 49,
	TURN_ALONG_CURVY_ROAD_ = 50,
	YIELD_TO_CROSS_TRAFFIC = YIELD_UNTIL_CLEAR_RULE,
	STOP_AND_STAND_BY = 52,
	YIELD_AT_TRAFFIC_LIGHT = 53,
	STOP_AT_TRAFFIC_LIGHT = 54,
	SLOWDOWN_FOR_SAFETY = 55,
	COLLISION_IMMINENT = 56,
	CHANGE_LANES_OPPORTUNISTIC = 57,
	NOT_DEFINED_YET = 98,
	NO_RULES = 99
}eTempRules;
