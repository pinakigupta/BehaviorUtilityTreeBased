#include "../PCH/pch.hpp"
#include "../include/BehaviorCals.hpp"

double RIGHT_ON_RED_ENABLE=0;
double DEBUG_OBJ_UID = -100;
double DLCX_ALLWD_GLOBALLY =0;
double VEHICLE_LENGTH = 5;
double ENABLE_OPTIMAL_POLICY_SEARCH = 1;
double SAFE_FOLLOWING_OFFSET=10;
double SAFE_FOLLOWING_ADDOFFSET_STATIONARY=5;
double DEFAULT_WAIT_TIME_BEHIND_PASSIVE_ROAD_BLOCK_s = 1.9;
double ENABLE_PASSIVE_ROAD_BLOCK_HANDLING = 0;//Whether or not to enable the experimental feature of handling stopped vehicle ahead or passive road objects in general that obstruct the HV's progress. With the vehicle's current level of autonomy, the team has decided to let the safety driver make the decision whether or not to overtake the stopped vehicle by changing lanes (even if it is an oncoming lane)
double SA_CLEANUP_TIME_THRSH = 1.5;
double ALTPOLICIES_CLEANUP_TIME_THRSH = 1.0;
/* Some constants used to tune the BehaviorPrimitives*/
// Reduce the velocity by __ at yield_until_clear spots
double  DEC_VEL_TO_YIELD_MPS =10;
double  TURN_TGT_DIST_OFFSET =0;
double TEMP_DISALLOW_ACC=0;
// Reduce the velocity by __ when making turns
double  DEC_VEL_TO_TURN_FACTOR = 1;
double  KAPPA_THRESHOLD_FOR_ROAD_BENDS = 0.05;
double KAPPA_LOWER_THRESHOLD_FOR_ROAD_BENDS = 0.01;
double  SA_LOOK_AHEAD_HORIZON = 200 ;//SA defaults to this clrDAhdVal
double  SAFE_PEDESTRIAN_YIELDING_OFFSET_m = 5;
double  MAP_INCONSISTENCY_THRESHOLD_m = 4;
double LOOK_AHEAD_TIME_s= 10;
double LOOK_AHEAD_HORIZON_WHEN_STATIONARY_m=60;
double DIST_THRSH_FOR_FLOW_RESTRICTION_CONSIDERATION = 100;
double DIST_THRSH_FOR_FLOW_RESTRICTION_COST_INFLUENCE = 30;
double SAFE_FOLLOWING_HV_MIN_SPEED = 1;
double SAFE_FOLLOWING_MIN_SPEED = 0.1;
double SAFE_FOLLOWING_MAX_SPEED = 20;
double SAFE_FOLLOWING_MIN_DIST = 6;
double SAFE_FOLLOWING_CRITICAL_MIN_DIST=3;
double K_User_Global_Confirmed_1 = 1;
double CONTROLLER_OVERSHOOT_LOWERBOUND_AT_STOPS_m=10;
double CONTROLLER_OVERSHOOT_LOWERBOUND_AT_SIGNALS_m=6;
double VEHICLE_VELOCITY_THRESHOLD_FOR_COMPLETE_STOP_mps = 0.25;
double DIST_THRESHOLD_FOR_COMPLETE_STOP = 2.5;
double KAPPA_LOOK_AHEAD_HORIZON = 15;
double KAPPA_IMMEDIATE_LOOK_AHEAD_HORIZON = 15;
double INTERSECTION_VICINITY_THRESHOLD = 15;
double INTERSECTION_EXIT_VICINITY_THRESHOLD = 6;
double BEHAVIOR_LOOK_AHEAD_HORIZON = 100;
double BEHAVIOR_LOOK_AHEAD_TIME = 7;
double LAT_ACCEL_LIMIT = 0.15;
double EXIT_OBJ_DETECTION_UNCERTAINTY_SAFETY_MARGIN = 5;
double PED_YIELD_DISTANCE = 15;
double PED_YIELD_TTC_THRESH = 10;
double PED_SLOWDOWN_TTC_THRESH = 10;
double COLLISION_IMMINENT_DISTANCE_THRESH = 7.0;
double COLLISION_IMMINENT_TTC_THRESH = 1.0;
double BEHAVIORPOLICY_EXEC_WAIT_TIME_S = 0.5;
double BEHAVIOR_PUB_WAIT_TIME_S = 0.08;
double BEHAVIORPLOT_WAIT_TIME_S = 1;
double BEHAVIOR_EXEC_WAIT_TIME_S = 0.01;
double INTERSECTION_FOV_TTC_THRESH = 10000;
double SPD_THRSH_FOR_DISTBSD_COST = 1.0;
double INTERSECTION_TM_THRESHOLD_FOR_FAR_LANE_THREAT_ASSESSMENT = 10;
double DIAGNOSTICS_SEGMENT_MISSING_TIME_THRESHOLD = 5;
double DIAGNOSTICS_MAX_DTAR_SKIP_THRESHOLD = 10;
double ENABLE_REMEDIAL_ACTIONS = 0;
double VISUALIZER_NOTIFICATION_ENABLED_FOR_CODERED = 0;
double BEHAVIORVISUALIZATION_PUB_ENABLED = 0;
double ALTBEHAVIORVISUALIZATION_PUB_ENABLED = 0;
double BEHAVIORPOLICY_CONT_PUB_ENABLED = 0;
double USEROUTPUTS_PUB_ENABLED = 1;
double LANESEG_REQUEST_ENABLED = 0;
double RAISE_INTERRUPT = 0,RAISE_INTERRUPT_VALUE=0;
double PRINT_PATHPLAN = 0;
double PRINT_ALTPATHPLAN = 0;
double PRINT_CODE_RBG=1;
double PRINT_CODE_R=1;
double PRINT_CODE_B=1;
double PRINT_CODE_G=1;
double PRINT_CODE_Y=1;
double PRINT_CODE_P=1;
//std::string PRINT_CODE_RBG_FILES_CONTAINING="PolicyCostCalc";
double ACTIVE_POLICY_CHANGE_COST_THRESH=0.5;


double LCX_TM_LEFT_FOR_GAP_CREATION_ABRT_THRSH_s = 4;
double GAP_PRED_ACCEL_FACTOR = 0.0;
double GAP_PRED_SPEED_FACTOR = 1.0;
double MIN_GAP_COST_THRESH = 0.5;
double MIN_GAP_CREATION_COST_THRESH = 0.5;
double GAP_CREATION_HV_SPD_THRSH = 2.0;
double ABRT_MIN_GAP_COST_THRESH = 0.25;
double LCX_LOOKAHEAD_TIME_HORIZON = 3;
double LCX_LOOKAHEAD_STEP = 0.2;
double LCX_TM_LEFT_FOR_LCX_ABRT_s = 5;
double LCX_TM_LEFT_FOR_LCX_ABRT_TRAJ_COMMITED_s = 1.5;
double LCX_TM_LEFT_FOR_RECOMMENDED_ZONE_s = 7;
double LCX_TM_LEFT_FOR_URGENT_ZONE_s = 20;
double LCX_MIN_GAP_BEHIND = 10;
double LCX_MIN_GAP_BEHIND_STATIC_OBJ = 5;
double LCX_MIN_GAP_AHEAD = 20;
double LCX_GAP_FILTER_PASS_THRESH = 8;
double LCX_PRED_ACCEL_DEC = 1;
double MAX_TARGET_LANE_CENTER_OFFSET_FOR_LCX_CMPLT = 0.1;

double LCX_TM_LEFT_FOR_GAP_CREATION_THRSH_s = 20;
double GAP_CREATION_DECEL_LIMIT = 10;
double GAP_CREATION_ACCEL_LIMIT = 10;
double GAP_CREATION_TGT_DIST = 20;
double GAP_CREATION_DECEL_STEP = 1;
double GAP_CREATION_ACCEL_STEP = 1;


double OPPORTUNISTIC_LCX_URGENCY_OVRD_DIST_THRSH = 20;
double OPPORTUNISTIC_LCX_IMPATIENCE_TM_THRESHOLD = 5;
double OPPORTUNISTIC_LCX_IMPATIENCE_SPD_THRESHOLD = 5;
double OPPORTUNISTIC_LCX_IMPATIENCE_HV_SPD_THRESHOLD = 5;
double OPPORTUNISTIC_LCX_IMPATIENCE_DIST_THRESHOLD = 15;
double OPPORTUNISTIC_LCX_EOS_DIST_THRESHOLD = 5;
double OPPORTUNISTIC_LCX_BEHIND_CLR_DIST_THRSH = 100;
double OPPORTUNISTIC_LCX_AHEAD_CLR_DIST_THRSH = 30;
double DO_NOT_USE_OPPORTUNISTIC_LCX_ENBL_OVRRD = 0;
double OPPORTUNISTIC_LCX_DLCX_ALLWD_DIST_THRSH = 40;

double SHARED_LANE_RV_BOTTLENECK_DIST_THRESH=40;
double SHARED_LANE_HV_BOTTLENECK_DIST_THRESH = 20;

double LEFT_ADJACENT_LANE_POLICY_SWITCH_COST = 0;
double RIGHT_ADJACENT_LANE_POLICY_SWITCH_COST = 0;
double LEFT_OPPOSING_LANE_POLICY_SWITCH_COST = 0;
double RIGHT_OPPOSING_LANE_POLICY_SWITCH_COST = 0;


double CodeRed_TimeGap = 10;
double CodeGreen_TimeGap = 10;
double CodeBlue_TimeGap = 10;


double TIME_THRESH_TO_DEAD_RECKON_UNKNOWN_TRAFFICSIGN_STATE=10;
double TIME_THRESH_TO_DEAD_RECKON_UNKNOWN_TRAFFICSIGNAL_STATE=10;

pthread_mutex_t mutex_global_calibration=PTHREAD_MUTEX_INITIALIZER;


void *json_handler(void *){
	boost::property_tree::ptree pt;
	std::string IniFile = ".//BehaviorCals/behavior.json";
	while (true){
		try{
			pthread_mutex_lock(&mutex_global_calibration);
			boost::property_tree::json_parser::read_json(IniFile, pt);
			pthread_mutex_unlock(&mutex_global_calibration);

			CALL_ExtractVar(SPD_THRSH_FOR_DISTBSD_COST,pt);
			CALL_ExtractVar(SAFE_FOLLOWING_MIN_DIST,pt);
			CALL_ExtractVar(SAFE_FOLLOWING_MIN_DIST,pt);
			CALL_ExtractVar(SAFE_FOLLOWING_CRITICAL_MIN_DIST,pt);
			CALL_ExtractVar(DEC_VEL_TO_YIELD_MPS,pt);
			CALL_ExtractVar(TURN_TGT_DIST_OFFSET,pt);
			CALL_ExtractVar(DEC_VEL_TO_TURN_FACTOR,pt);
			CALL_ExtractVar(ENABLE_PASSIVE_ROAD_BLOCK_HANDLING,pt);
			CALL_ExtractVar(SAFE_FOLLOWING_OFFSET,pt);
			CALL_ExtractVar(SAFE_FOLLOWING_ADDOFFSET_STATIONARY,pt);
			CALL_ExtractVar(KAPPA_THRESHOLD_FOR_ROAD_BENDS,pt);
			CALL_ExtractVar(KAPPA_LOWER_THRESHOLD_FOR_ROAD_BENDS,pt);
			CALL_ExtractVar(KAPPA_LOOK_AHEAD_HORIZON,pt);
			CALL_ExtractVar(KAPPA_IMMEDIATE_LOOK_AHEAD_HORIZON,pt);
			//CALL_ExtractVar(PRINT_CODE_RBG_FILES_CONTAINING,pt);



			CALL_ExtractVar(SA_LOOK_AHEAD_HORIZON,pt);
			CALL_ExtractVar(SAFE_PEDESTRIAN_YIELDING_OFFSET_m,pt);
			CALL_ExtractVar(MAP_INCONSISTENCY_THRESHOLD_m,pt);
			CALL_ExtractVar(DEFAULT_WAIT_TIME_BEHIND_PASSIVE_ROAD_BLOCK_s,pt);
			CALL_ExtractVar(K_User_Global_Confirmed_1,pt);
			CALL_ExtractVar(LOOK_AHEAD_TIME_s,pt);
			CALL_ExtractVar(LOOK_AHEAD_HORIZON_WHEN_STATIONARY_m,pt);
			CALL_ExtractVar(DIST_THRSH_FOR_FLOW_RESTRICTION_CONSIDERATION,pt);
			CALL_ExtractVar(DIST_THRSH_FOR_FLOW_RESTRICTION_COST_INFLUENCE,pt);
			CALL_ExtractVar(SAFE_FOLLOWING_HV_MIN_SPEED,pt);
			CALL_ExtractVar(SAFE_FOLLOWING_MIN_SPEED,pt);
			CALL_ExtractVar(SAFE_FOLLOWING_MAX_SPEED,pt);
			CALL_ExtractVar(CONTROLLER_OVERSHOOT_LOWERBOUND_AT_STOPS_m,pt);
			CALL_ExtractVar(CONTROLLER_OVERSHOOT_LOWERBOUND_AT_SIGNALS_m,pt);
			CALL_ExtractVar(VEHICLE_VELOCITY_THRESHOLD_FOR_COMPLETE_STOP_mps,pt);
			CALL_ExtractVar(DIST_THRESHOLD_FOR_COMPLETE_STOP,pt);
			CALL_ExtractVar(INTERSECTION_VICINITY_THRESHOLD,pt);
			CALL_ExtractVar(INTERSECTION_EXIT_VICINITY_THRESHOLD,pt);
			CALL_ExtractVar(BEHAVIOR_LOOK_AHEAD_HORIZON,pt);
			CALL_ExtractVar(BEHAVIOR_LOOK_AHEAD_TIME,pt);
			CALL_ExtractVar(LAT_ACCEL_LIMIT,pt);
			CALL_ExtractVar(EXIT_OBJ_DETECTION_UNCERTAINTY_SAFETY_MARGIN,pt);
			CALL_ExtractVar(PED_YIELD_DISTANCE,pt);
			CALL_ExtractVar(PED_SLOWDOWN_TTC_THRESH,pt);
			CALL_ExtractVar(PED_YIELD_TTC_THRESH,pt);
			CALL_ExtractVar(COLLISION_IMMINENT_DISTANCE_THRESH,pt);
			CALL_ExtractVar(COLLISION_IMMINENT_TTC_THRESH,pt);
			CALL_ExtractVar(INTERSECTION_FOV_TTC_THRESH,pt);
			CALL_ExtractVar(INTERSECTION_TM_THRESHOLD_FOR_FAR_LANE_THREAT_ASSESSMENT,pt);

			CALL_ExtractVar(ENABLE_OPTIMAL_POLICY_SEARCH,pt);
			CALL_ExtractVar(DEBUG_OBJ_UID,pt);



			CALL_ExtractVar(LANESEG_REQUEST_ENABLED,pt);
			CALL_ExtractVar(BEHAVIORPLOT_WAIT_TIME_S,pt);
			CALL_ExtractVar(BEHAVIOR_EXEC_WAIT_TIME_S,pt);
			CALL_ExtractVar(BEHAVIOR_PUB_WAIT_TIME_S,pt);

			CALL_ExtractVar(BEHAVIORPOLICY_EXEC_WAIT_TIME_S,pt);
			CALL_ExtractVar(ENABLE_REMEDIAL_ACTIONS,pt);
			CALL_ExtractVar(VISUALIZER_NOTIFICATION_ENABLED_FOR_CODERED,pt);
			CALL_ExtractVar(BEHAVIORVISUALIZATION_PUB_ENABLED,pt);
			CALL_ExtractVar(ALTBEHAVIORVISUALIZATION_PUB_ENABLED,pt);
			CALL_ExtractVar(USEROUTPUTS_PUB_ENABLED,pt);
			CALL_ExtractVar(BEHAVIORPOLICY_CONT_PUB_ENABLED,pt);
			CALL_ExtractVar(DIAGNOSTICS_SEGMENT_MISSING_TIME_THRESHOLD,pt);
			CALL_ExtractVar(DIAGNOSTICS_MAX_DTAR_SKIP_THRESHOLD,pt);
			CALL_ExtractVar(RAISE_INTERRUPT,pt);
			CALL_ExtractVar(RAISE_INTERRUPT_VALUE,pt);
			CALL_ExtractVar(PRINT_PATHPLAN,pt);
			CALL_ExtractVar(PRINT_ALTPATHPLAN,pt);
			CALL_ExtractVar(PRINT_CODE_RBG,pt);
			CALL_ExtractVar(PRINT_CODE_R,pt);
			CALL_ExtractVar(PRINT_CODE_B,pt);
			CALL_ExtractVar(PRINT_CODE_G,pt);
			CALL_ExtractVar(PRINT_CODE_P,pt);
			CALL_ExtractVar(PRINT_CODE_Y,pt);

			CALL_ExtractVar(SA_CLEANUP_TIME_THRSH,pt);
			CALL_ExtractVar(ALTPOLICIES_CLEANUP_TIME_THRSH,pt);

			CALL_ExtractVar(GAP_PRED_ACCEL_FACTOR,pt);
			CALL_ExtractVar(GAP_PRED_SPEED_FACTOR,pt);
			CALL_ExtractVar(MIN_GAP_COST_THRESH,pt);
			CALL_ExtractVar(MIN_GAP_CREATION_COST_THRESH,pt);
			CALL_ExtractVar(ABRT_MIN_GAP_COST_THRESH,pt);
			CALL_ExtractVar(LCX_LOOKAHEAD_TIME_HORIZON,pt);
			CALL_ExtractVar(LCX_LOOKAHEAD_STEP,pt);
			CALL_ExtractVar(LCX_TM_LEFT_FOR_LCX_ABRT_s,pt);
			CALL_ExtractVar(LCX_TM_LEFT_FOR_LCX_ABRT_TRAJ_COMMITED_s,pt);
			CALL_ExtractVar(LCX_TM_LEFT_FOR_RECOMMENDED_ZONE_s,pt);
			CALL_ExtractVar(LCX_TM_LEFT_FOR_URGENT_ZONE_s,pt);
			CALL_ExtractVar(LCX_MIN_GAP_BEHIND,pt);
			CALL_ExtractVar(LCX_MIN_GAP_BEHIND_STATIC_OBJ,pt);
			CALL_ExtractVar(LCX_MIN_GAP_AHEAD,pt);
			CALL_ExtractVar(LCX_GAP_FILTER_PASS_THRESH,pt);
			CALL_ExtractVar(LCX_PRED_ACCEL_DEC,pt);


			CALL_ExtractVar(GAP_CREATION_DECEL_LIMIT,pt);
			CALL_ExtractVar(GAP_CREATION_ACCEL_LIMIT,pt);
			CALL_ExtractVar(GAP_CREATION_DECEL_STEP,pt);
			CALL_ExtractVar(GAP_CREATION_ACCEL_STEP,pt);
			CALL_ExtractVar(GAP_CREATION_TGT_DIST,pt);
			CALL_ExtractVar(LCX_TM_LEFT_FOR_GAP_CREATION_THRSH_s,pt);
			CALL_ExtractVar(LCX_TM_LEFT_FOR_GAP_CREATION_ABRT_THRSH_s,pt);
			CALL_ExtractVar(GAP_CREATION_HV_SPD_THRSH,pt);


			CALL_ExtractVar(MAX_TARGET_LANE_CENTER_OFFSET_FOR_LCX_CMPLT,pt);
			CALL_ExtractVar(OPPORTUNISTIC_LCX_URGENCY_OVRD_DIST_THRSH,pt);
			CALL_ExtractVar(OPPORTUNISTIC_LCX_IMPATIENCE_TM_THRESHOLD,pt);
			CALL_ExtractVar(OPPORTUNISTIC_LCX_IMPATIENCE_SPD_THRESHOLD,pt);
			CALL_ExtractVar(OPPORTUNISTIC_LCX_IMPATIENCE_HV_SPD_THRESHOLD,pt);
			CALL_ExtractVar(OPPORTUNISTIC_LCX_IMPATIENCE_DIST_THRESHOLD,pt);
			CALL_ExtractVar(OPPORTUNISTIC_LCX_EOS_DIST_THRESHOLD,pt);
			CALL_ExtractVar(OPPORTUNISTIC_LCX_BEHIND_CLR_DIST_THRSH,pt);
			CALL_ExtractVar(OPPORTUNISTIC_LCX_AHEAD_CLR_DIST_THRSH,pt);
			CALL_ExtractVar(DO_NOT_USE_OPPORTUNISTIC_LCX_ENBL_OVRRD,pt);
			CALL_ExtractVar(OPPORTUNISTIC_LCX_DLCX_ALLWD_DIST_THRSH,pt);

			CALL_ExtractVar(LEFT_ADJACENT_LANE_POLICY_SWITCH_COST,pt);
			CALL_ExtractVar(RIGHT_ADJACENT_LANE_POLICY_SWITCH_COST,pt);
			CALL_ExtractVar(LEFT_OPPOSING_LANE_POLICY_SWITCH_COST,pt);
			CALL_ExtractVar(RIGHT_OPPOSING_LANE_POLICY_SWITCH_COST,pt);
			CALL_ExtractVar(ACTIVE_POLICY_CHANGE_COST_THRESH,pt);



			CALL_ExtractVar(TEMP_DISALLOW_ACC,pt);

			CALL_ExtractVar(CodeRed_TimeGap,pt);
			CALL_ExtractVar(CodeGreen_TimeGap,pt);
			CALL_ExtractVar(CodeBlue_TimeGap,pt);

			CALL_ExtractVar(TIME_THRESH_TO_DEAD_RECKON_UNKNOWN_TRAFFICSIGN_STATE,pt);
			CALL_ExtractVar(TIME_THRESH_TO_DEAD_RECKON_UNKNOWN_TRAFFICSIGNAL_STATE,pt);

			CALL_ExtractVar(SHARED_LANE_HV_BOTTLENECK_DIST_THRESH,pt);
			CALL_ExtractVar(SHARED_LANE_RV_BOTTLENECK_DIST_THRESH,pt);

			CALL_ExtractVar(RIGHT_ON_RED_ENABLE,pt);




		} catch( const boost::property_tree::json_parser::json_parser_error& err)
		{
			std::cout<<"Config file read error. Exiting the config  handler."<<std::endl;
			exit(1);

		}
		usleep(1e6);
	}
}


